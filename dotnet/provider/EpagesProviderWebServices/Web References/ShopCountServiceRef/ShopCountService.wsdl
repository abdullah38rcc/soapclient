<?xml version="1.0" encoding="utf-8"?>
<definitions xmlns:http="http://schemas.xmlsoap.org/wsdl/http/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:s="http://www.w3.org/2001/XMLSchema" xmlns:s0="urn://epages.de/WebService/ShopCountService/2006/08" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tm="http://microsoft.com/wsdl/mime/textMatching/" xmlns:mime="http://schemas.xmlsoap.org/wsdl/mime/" targetNamespace="urn://epages.de/WebService/ShopCountService/2006/08" name="ShopCountService" xmlns="http://schemas.xmlsoap.org/wsdl/">
  <documentation>This web service count the number of shops of a provider</documentation>
  <types>
    <s:schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn://epages.de/WebService/ShopCountService/2006/08">
      <s:complexType name="type_GetCount_In">
        <s:annotation>
          <s:documentation>specifies the conditions for shops to be counted</s:documentation>
        </s:annotation>
        <s:all>
          <s:element minOccurs="0" name="ShopType" type="s:string">
            <s:annotation>
              <s:documentation>shop type alias</s:documentation>
            </s:annotation>
          </s:element>
          <s:element minOccurs="0" name="Database" type="s:string">
            <s:annotation>
              <s:documentation>store database identifier</s:documentation>
            </s:annotation>
          </s:element>
          <s:element minOccurs="0" name="IsClosed" type="s:int">
            <s:annotation>
              <s:documentation>0 - do not count closed shops; 1 - count only closed shops; else - count both</s:documentation>
            </s:annotation>
          </s:element>
          <s:element minOccurs="0" name="IsTrialShop" type="s:int">
            <s:annotation>
              <s:documentation>0 - do not count shops in trial period; 1 - count only shops in trial period; else - count both</s:documentation>
            </s:annotation>
          </s:element>
          <s:element minOccurs="0" name="IsInternalTestShop" type="s:int">
            <s:annotation>
              <s:documentation>0 - do not count internal test shops; 1 - count only internal test shops; else - count both</s:documentation>
            </s:annotation>
          </s:element>
          <s:element minOccurs="0" name="IsPreCreated" type="s:int">
            <s:annotation>
              <s:documentation>0 - do not count pre-created shops; 1 - count only pre-created shops; 2 - count both</s:documentation>
            </s:annotation>
          </s:element>
          <s:element minOccurs="0" name="IsDeleted" type="s:int">
            <s:annotation>
              <s:documentation>0 - do not count deleted shops; 1 - count only deleted shops; 2 - count both</s:documentation>
            </s:annotation>
          </s:element>
        </s:all>
      </s:complexType>
      <s:complexType name="TShopCount">
        <s:annotation>
          <s:documentation>number of shops in one database
            having the same shop type
            that are not deleted and not internal test shops</s:documentation>
        </s:annotation>
        <s:all>
          <s:element name="ShopType" type="s:string">
            <s:annotation>
              <s:documentation>shop type alias</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="Database" type="s:string">
            <s:annotation>
              <s:documentation>store database identifier</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="Trial_Closed" type="s:int">
            <s:annotation>
              <s:documentation>shop count (IsTrialShop &amp;&amp; IsClosed &amp;&amp; !IsPreCreated)</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="Trial_NotClosed" type="s:int">
            <s:annotation>
              <s:documentation>shop count (IsTrialShop &amp;&amp; !IsClosed &amp;&amp; !IsPreCreated)</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="NotTrial_Closed" type="s:int">
            <s:annotation>
              <s:documentation>shop count (!IsTrialShop &amp;&amp; IsClosed &amp;&amp; !IsPreCreated)</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="NotTrial_NotClosed" type="s:int">
            <s:annotation>
              <s:documentation>shop count (!IsTrialShop &amp;&amp; !IsClosed &amp;&amp; !IsPreCreated)</s:documentation>
            </s:annotation>
          </s:element>
          <s:element name="PreCreated" type="s:int">
            <s:annotation>
              <s:documentation>shop count (IsPreCreated)</s:documentation>
            </s:annotation>
          </s:element>
        </s:all>
      </s:complexType>
      <s:complexType name="type_GetAllCounts_Out">
        <s:annotation>
          <s:documentation>list of full path names of XML files</s:documentation>
        </s:annotation>
        <s:complexContent mixed="false">
          <s:restriction base="soapenc:Array">
            <s:attribute d7p1:arrayType="s0:TShopCount[]" ref="soapenc:arrayType" xmlns:d7p1="http://schemas.xmlsoap.org/wsdl/" />
          </s:restriction>
        </s:complexContent>
      </s:complexType>
    </s:schema>
  </types>
  <message name="msg_GetCount_Input">
    <part name="Filter" type="s0:type_GetCount_In" />
  </message>
  <message name="msg_GetCount_Output">
    <part name="Count" type="s:int" />
  </message>
  <message name="msg_GetAllCounts_Input" />
  <message name="msg_GetAllCounts_Output">
    <part name="AllCounts" type="s0:type_GetAllCounts_Out" />
  </message>
  <portType name="port_ShopCount">
    <operation name="getCount">
      <documentation>Returns the number of shops of a provider, filtered by shop type, database and flags.</documentation>
      <input message="s0:msg_GetCount_Input" />
      <output message="s0:msg_GetCount_Output" />
    </operation>
    <operation name="getAllCounts">
      <documentation>Returns the number of shops of a provider from all databases. Deleted shops and internal test shops are not included.</documentation>
      <input message="s0:msg_GetAllCounts_Input" />
      <output message="s0:msg_GetAllCounts_Output" />
    </operation>
  </portType>
  <binding name="bind_ShopCount_SOAP" type="s0:port_ShopCount">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc" />
    <operation name="getCount">
      <soap:operation soapAction="urn://epages.de/WebService/ShopCountService/2006/08#getCount" />
      <input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/ShopCountService/2006/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </input>
      <output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/ShopCountService/2006/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </output>
    </operation>
    <operation name="getAllCounts">
      <soap:operation soapAction="urn://epages.de/WebService/ShopCountService/2006/08#getAllCounts" />
      <input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/ShopCountService/2006/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </input>
      <output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/ShopCountService/2006/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </output>
    </operation>
  </binding>
  <service name="ShopCountService">
    <documentation>ePages ShopCount Service</documentation>
    <port name="port_ShopCount" binding="s0:bind_ShopCount_SOAP">
      <soap:address location="http://localhost/epages/Site.soap" />
    </port>
  </service>
</definitions>