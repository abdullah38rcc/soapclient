//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1873
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1873.
// 
#pragma warning disable 1591

namespace EpagesProviderWebServices.SimpleProvisioningServiceRef {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="bind_SimpleProvisioning_SOAP", Namespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
    public partial class SimpleProvisioningService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback createOperationCompleted;
        
        private System.Threading.SendOrPostCallback markForDeletionOperationCompleted;
        
        private System.Threading.SendOrPostCallback existsOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateOperationCompleted;
        
        private System.Threading.SendOrPostCallback getInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback renameOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public SimpleProvisioningService() {
            this.Url = global::EpagesProviderWebServices.Properties.Settings.Default.EpagesProviderWebServices_SimpleProvisioningServiceRef_SimpleProvisioningService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createCompletedEventHandler createCompleted;
        
        /// <remarks/>
        public event markForDeletionCompletedEventHandler markForDeletionCompleted;
        
        /// <remarks/>
        public event existsCompletedEventHandler existsCompleted;
        
        /// <remarks/>
        public event updateCompletedEventHandler updateCompleted;
        
        /// <remarks/>
        public event getInfoCompletedEventHandler getInfoCompleted;
        
        /// <remarks/>
        public event renameCompletedEventHandler renameCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn://epages.de/WebService/SimpleProvisioningService/2009/10#create", RequestNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10", ResponseNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
        public void create(TCreateShop CreateShopData) {
            this.Invoke("create", new object[] {
                        CreateShopData});
        }
        
        /// <remarks/>
        public System.IAsyncResult Begincreate(TCreateShop CreateShopData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("create", new object[] {
                        CreateShopData}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endcreate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void createAsync(TCreateShop CreateShopData) {
            this.createAsync(CreateShopData, null);
        }
        
        /// <remarks/>
        public void createAsync(TCreateShop CreateShopData, object userState) {
            if ((this.createOperationCompleted == null)) {
                this.createOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateOperationCompleted);
            }
            this.InvokeAsync("create", new object[] {
                        CreateShopData}, this.createOperationCompleted, userState);
        }
        
        private void OncreateOperationCompleted(object arg) {
            if ((this.createCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn://epages.de/WebService/SimpleProvisioningService/2009/10#markForDeletion", RequestNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10", ResponseNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
        public void markForDeletion(TShopRef ShopRef) {
            this.Invoke("markForDeletion", new object[] {
                        ShopRef});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginmarkForDeletion(TShopRef ShopRef, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("markForDeletion", new object[] {
                        ShopRef}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndmarkForDeletion(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void markForDeletionAsync(TShopRef ShopRef) {
            this.markForDeletionAsync(ShopRef, null);
        }
        
        /// <remarks/>
        public void markForDeletionAsync(TShopRef ShopRef, object userState) {
            if ((this.markForDeletionOperationCompleted == null)) {
                this.markForDeletionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmarkForDeletionOperationCompleted);
            }
            this.InvokeAsync("markForDeletion", new object[] {
                        ShopRef}, this.markForDeletionOperationCompleted, userState);
        }
        
        private void OnmarkForDeletionOperationCompleted(object arg) {
            if ((this.markForDeletionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.markForDeletionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn://epages.de/WebService/SimpleProvisioningService/2009/10#exists", RequestNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10", ResponseNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
        [return: System.Xml.Serialization.SoapElementAttribute("Exists")]
        public bool exists(TShopRef ShopRef) {
            object[] results = this.Invoke("exists", new object[] {
                        ShopRef});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginexists(TShopRef ShopRef, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("exists", new object[] {
                        ShopRef}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool Endexists(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void existsAsync(TShopRef ShopRef) {
            this.existsAsync(ShopRef, null);
        }
        
        /// <remarks/>
        public void existsAsync(TShopRef ShopRef, object userState) {
            if ((this.existsOperationCompleted == null)) {
                this.existsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnexistsOperationCompleted);
            }
            this.InvokeAsync("exists", new object[] {
                        ShopRef}, this.existsOperationCompleted, userState);
        }
        
        private void OnexistsOperationCompleted(object arg) {
            if ((this.existsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.existsCompleted(this, new existsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn://epages.de/WebService/SimpleProvisioningService/2009/10#update", RequestNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10", ResponseNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
        public void update(TUpdateShop ShopData) {
            this.Invoke("update", new object[] {
                        ShopData});
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginupdate(TUpdateShop ShopData, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("update", new object[] {
                        ShopData}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endupdate(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void updateAsync(TUpdateShop ShopData) {
            this.updateAsync(ShopData, null);
        }
        
        /// <remarks/>
        public void updateAsync(TUpdateShop ShopData, object userState) {
            if ((this.updateOperationCompleted == null)) {
                this.updateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateOperationCompleted);
            }
            this.InvokeAsync("update", new object[] {
                        ShopData}, this.updateOperationCompleted, userState);
        }
        
        private void OnupdateOperationCompleted(object arg) {
            if ((this.updateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn://epages.de/WebService/SimpleProvisioningService/2009/10#getInfo", RequestNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10", ResponseNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
        [return: System.Xml.Serialization.SoapElementAttribute("ShopInfo")]
        public TInfoShop getInfo(TShopRef ShopRef) {
            object[] results = this.Invoke("getInfo", new object[] {
                        ShopRef});
            return ((TInfoShop)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BegingetInfo(TShopRef ShopRef, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("getInfo", new object[] {
                        ShopRef}, callback, asyncState);
        }
        
        /// <remarks/>
        public TInfoShop EndgetInfo(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((TInfoShop)(results[0]));
        }
        
        /// <remarks/>
        public void getInfoAsync(TShopRef ShopRef) {
            this.getInfoAsync(ShopRef, null);
        }
        
        /// <remarks/>
        public void getInfoAsync(TShopRef ShopRef, object userState) {
            if ((this.getInfoOperationCompleted == null)) {
                this.getInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetInfoOperationCompleted);
            }
            this.InvokeAsync("getInfo", new object[] {
                        ShopRef}, this.getInfoOperationCompleted, userState);
        }
        
        private void OngetInfoOperationCompleted(object arg) {
            if ((this.getInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getInfoCompleted(this, new getInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("urn://epages.de/WebService/SimpleProvisioningService/2009/10#rename", RequestNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10", ResponseNamespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
        public void rename(TRename_Input ShopInfo) {
            this.Invoke("rename", new object[] {
                        ShopInfo});
        }
        
        /// <remarks/>
        public System.IAsyncResult Beginrename(TRename_Input ShopInfo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("rename", new object[] {
                        ShopInfo}, callback, asyncState);
        }
        
        /// <remarks/>
        public void Endrename(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void renameAsync(TRename_Input ShopInfo) {
            this.renameAsync(ShopInfo, null);
        }
        
        /// <remarks/>
        public void renameAsync(TRename_Input ShopInfo, object userState) {
            if ((this.renameOperationCompleted == null)) {
                this.renameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnrenameOperationCompleted);
            }
            this.InvokeAsync("rename", new object[] {
                        ShopInfo}, this.renameOperationCompleted, userState);
        }
        
        private void OnrenameOperationCompleted(object arg) {
            if ((this.renameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.renameCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
    public partial class TCreateShop {
        
        private string aliasField;
        
        private string shopTypeField;
        
        private bool isClosedField;
        
        private bool isClosedFieldSpecified;
        
        private bool isTrialShopField;
        
        private bool isTrialShopFieldSpecified;
        
        private bool isInternalTestShopField;
        
        private bool isInternalTestShopFieldSpecified;
        
        private string domainNameField;
        
        private bool hasSSLCertificateField;
        
        private bool hasSSLCertificateFieldSpecified;
        
        private string merchantLoginField;
        
        private string merchantPasswordField;
        
        private string merchantEMailField;
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public string ShopType {
            get {
                return this.shopTypeField;
            }
            set {
                this.shopTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsClosed {
            get {
                return this.isClosedField;
            }
            set {
                this.isClosedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IsClosedSpecified {
            get {
                return this.isClosedFieldSpecified;
            }
            set {
                this.isClosedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsTrialShop {
            get {
                return this.isTrialShopField;
            }
            set {
                this.isTrialShopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IsTrialShopSpecified {
            get {
                return this.isTrialShopFieldSpecified;
            }
            set {
                this.isTrialShopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsInternalTestShop {
            get {
                return this.isInternalTestShopField;
            }
            set {
                this.isInternalTestShopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IsInternalTestShopSpecified {
            get {
                return this.isInternalTestShopFieldSpecified;
            }
            set {
                this.isInternalTestShopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public bool HasSSLCertificate {
            get {
                return this.hasSSLCertificateField;
            }
            set {
                this.hasSSLCertificateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool HasSSLCertificateSpecified {
            get {
                return this.hasSSLCertificateFieldSpecified;
            }
            set {
                this.hasSSLCertificateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string MerchantLogin {
            get {
                return this.merchantLoginField;
            }
            set {
                this.merchantLoginField = value;
            }
        }
        
        /// <remarks/>
        public string MerchantPassword {
            get {
                return this.merchantPasswordField;
            }
            set {
                this.merchantPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string MerchantEMail {
            get {
                return this.merchantEMailField;
            }
            set {
                this.merchantEMailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
    public partial class TRename_Input {
        
        private string aliasField;
        
        private string newAliasField;
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public string NewAlias {
            get {
                return this.newAliasField;
            }
            set {
                this.newAliasField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
    public partial class TInfoShop {
        
        private string aliasField;
        
        private string shopTypeField;
        
        private string databaseField;
        
        private bool isClosedField;
        
        private bool isDeletedField;
        
        private bool isTrialShopField;
        
        private bool isInternalTestShopField;
        
        private string domainNameField;
        
        private bool hasSSLCertificateField;
        
        private string merchantLoginField;
        
        private string merchantEMailField;
        
        private System.DateTime lastMerchantLoginDateField;
        
        private bool isMarkedForDelField;
        
        private string storefrontURLField;
        
        private string backofficeURLField;
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public string ShopType {
            get {
                return this.shopTypeField;
            }
            set {
                this.shopTypeField = value;
            }
        }
        
        /// <remarks/>
        public string Database {
            get {
                return this.databaseField;
            }
            set {
                this.databaseField = value;
            }
        }
        
        /// <remarks/>
        public bool IsClosed {
            get {
                return this.isClosedField;
            }
            set {
                this.isClosedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsDeleted {
            get {
                return this.isDeletedField;
            }
            set {
                this.isDeletedField = value;
            }
        }
        
        /// <remarks/>
        public bool IsTrialShop {
            get {
                return this.isTrialShopField;
            }
            set {
                this.isTrialShopField = value;
            }
        }
        
        /// <remarks/>
        public bool IsInternalTestShop {
            get {
                return this.isInternalTestShopField;
            }
            set {
                this.isInternalTestShopField = value;
            }
        }
        
        /// <remarks/>
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public bool HasSSLCertificate {
            get {
                return this.hasSSLCertificateField;
            }
            set {
                this.hasSSLCertificateField = value;
            }
        }
        
        /// <remarks/>
        public string MerchantLogin {
            get {
                return this.merchantLoginField;
            }
            set {
                this.merchantLoginField = value;
            }
        }
        
        /// <remarks/>
        public string MerchantEMail {
            get {
                return this.merchantEMailField;
            }
            set {
                this.merchantEMailField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime LastMerchantLoginDate {
            get {
                return this.lastMerchantLoginDateField;
            }
            set {
                this.lastMerchantLoginDateField = value;
            }
        }
        
        /// <remarks/>
        public bool IsMarkedForDel {
            get {
                return this.isMarkedForDelField;
            }
            set {
                this.isMarkedForDelField = value;
            }
        }
        
        /// <remarks/>
        public string StorefrontURL {
            get {
                return this.storefrontURLField;
            }
            set {
                this.storefrontURLField = value;
            }
        }
        
        /// <remarks/>
        public string BackofficeURL {
            get {
                return this.backofficeURLField;
            }
            set {
                this.backofficeURLField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
    public partial class TUpdateShop {
        
        private string aliasField;
        
        private string shopTypeField;
        
        private bool isClosedField;
        
        private bool isClosedFieldSpecified;
        
        private bool isTrialShopField;
        
        private bool isTrialShopFieldSpecified;
        
        private bool isInternalTestShopField;
        
        private bool isInternalTestShopFieldSpecified;
        
        private string domainNameField;
        
        private bool hasSSLCertificateField;
        
        private bool hasSSLCertificateFieldSpecified;
        
        private string merchantLoginField;
        
        private string merchantPasswordField;
        
        private string merchantEMailField;
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
        
        /// <remarks/>
        public string ShopType {
            get {
                return this.shopTypeField;
            }
            set {
                this.shopTypeField = value;
            }
        }
        
        /// <remarks/>
        public bool IsClosed {
            get {
                return this.isClosedField;
            }
            set {
                this.isClosedField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IsClosedSpecified {
            get {
                return this.isClosedFieldSpecified;
            }
            set {
                this.isClosedFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsTrialShop {
            get {
                return this.isTrialShopField;
            }
            set {
                this.isTrialShopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IsTrialShopSpecified {
            get {
                return this.isTrialShopFieldSpecified;
            }
            set {
                this.isTrialShopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public bool IsInternalTestShop {
            get {
                return this.isInternalTestShopField;
            }
            set {
                this.isInternalTestShopField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool IsInternalTestShopSpecified {
            get {
                return this.isInternalTestShopFieldSpecified;
            }
            set {
                this.isInternalTestShopFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string DomainName {
            get {
                return this.domainNameField;
            }
            set {
                this.domainNameField = value;
            }
        }
        
        /// <remarks/>
        public bool HasSSLCertificate {
            get {
                return this.hasSSLCertificateField;
            }
            set {
                this.hasSSLCertificateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapIgnoreAttribute()]
        public bool HasSSLCertificateSpecified {
            get {
                return this.hasSSLCertificateFieldSpecified;
            }
            set {
                this.hasSSLCertificateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string MerchantLogin {
            get {
                return this.merchantLoginField;
            }
            set {
                this.merchantLoginField = value;
            }
        }
        
        /// <remarks/>
        public string MerchantPassword {
            get {
                return this.merchantPasswordField;
            }
            set {
                this.merchantPasswordField = value;
            }
        }
        
        /// <remarks/>
        public string MerchantEMail {
            get {
                return this.merchantEMailField;
            }
            set {
                this.merchantEMailField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="urn://epages.de/WebService/SimpleProvisioningService/2009/10")]
    public partial class TShopRef {
        
        private string aliasField;
        
        /// <remarks/>
        public string Alias {
            get {
                return this.aliasField;
            }
            set {
                this.aliasField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void createCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void markForDeletionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void existsCompletedEventHandler(object sender, existsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class existsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal existsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void updateCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void getInfoCompletedEventHandler(object sender, getInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public TInfoShop Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((TInfoShop)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
    public delegate void renameCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}

#pragma warning restore 1591