import org.apache.tools.ant.taskdefs.condition.Os

apply plugin: 'msbuild'

archivesBaseName = 'soapclient-provider'
description = '.Net 2.0 based clients for epages6 ShopServices'

msbuild {
  // mandatory
  projectFile = 'EpagesProviderWebServices/EpagesProviderWebServices.csproj'

  // MsBuild project name (/p:Project=...)
  projectName = project.name

  // Verbosity (/v:detailed, by default uses gradle logging level)
  // verbosity = 'detailed'

  // targets to execute (/t:Clean;Rebuild, no default)
  targets = ['Clean', 'Rebuild']

  // Below values can override settings from the project file

  // overrides project OutputPath
    destinationDir = 'EpagesProviderWebServices/bin/Release'

  // overrides project IntermediaryOutputPath
    intermediateDir = 'EpagesProviderWebServices/bin/obj'

  // Generates XML documentation file (from javadoc through custom DocLet)
  generateDoc = false

  // Other msbuild options can be set:
  // loggerAssembly, generateDoc, debugType, optimize, debugSymbols, configuration, platform, defineConstants ...

  // you can also provide properties by name (/p:SomeProperty=Value)
//   parameters.SomeProperty = 'Value'
}

project.ext.nUnit = {String[] args ->
    List<String> newArgs = new ArrayList<String>()
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        newArgs.add("cmd.exe")
        newArgs.add("/C")
    }
    newArgs.add("nunit-console")
    newArgs.addAll(args)
    return newArgs.toArray(new String[newArgs.size()])
}

def putIfExists = { mymap, prop ->
    if(System.properties[prop] != null) {
        mymap.put(prop, System.properties[prop])
    }
}

task runTests(type:Exec, dependsOn: assemble) {
    description = 'Runs all webservice tests'
    group = 'Test'
    def envmap = [:]

    putIfExists(envmap, 'wsHostName')
    putIfExists(envmap, 'wsUrl')
    putIfExists(envmap, 'wsShop')
    putIfExists(envmap, 'wsUser')
    putIfExists(envmap, 'wsPassword')

    environment envmap
    logging.captureStandardOutput LogLevel.INFO
    workingDir projectDir.path
    commandLine nUnit("EpagesProviderWebServices/EpagesProviderWebServices.nunit")
}

assemble.dependsOn msbuild
task check (dependsOn: runTests)