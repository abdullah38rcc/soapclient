<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:epagestypes="urn://epages.de/WebService/EpagesTypes/2005/01" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:tns="urn://epages.de/WebService/CrossSellingService/2007/01" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:crosssellingtypes="urn://epages.de/WebService/CrossSellingTypes/2007/01" xmlns="http://schemas.xmlsoap.org/wsdl/" name="CrossSellingService" targetNamespace="urn://epages.de/WebService/CrossSellingService/2007/01" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <documentation>
    this is a web service for an epages e-commerce system.
    this service is a container for all methods in the cross selling context.
  </documentation>
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn://epages.de/WebService/CrossSellingService/2007/01">
      <xs:import schemaLocation="CrossSellingTypes2.xsd" namespace="urn://epages.de/WebService/CrossSellingTypes/2007/01" />
      <xs:complexType name="type_GetInfo_In">
        <xs:annotation>
          <xs:documentation>
            input structure of an getInfo() call. see crosssellingtypes:type_GetInfo_In
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="crosssellingtypes:TGetInfo_Input[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_GetInfo_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an getInfo() call. see crosssellingtypes:TGetInfo_Return
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="crosssellingtypes:TGetInfo_Return[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Exists_In">
        <xs:annotation>
          <xs:documentation>
            input structure of an exists() call. see crosssellingtypes:TExists_Input
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="crosssellingtypes:TExists_Input[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Exists_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an exists() call. see crosssellingtypes:TExists_Return
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="crosssellingtypes:TExists_Return[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Create_In">
        <xs:annotation>
          <xs:documentation>
            input structure of an create() call. see crosssellingtypes:TCreate_Input
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="crosssellingtypes:TCreate_Input[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Create_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an create() call. see crosssellingtypes:TCreate_Return
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="crosssellingtypes:TCreate_Return[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Delete_In">
        <xs:annotation>
          <xs:documentation>
            input structure of an delete() call. see crosssellingtypes:TDelete_Input
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="crosssellingtypes:TDelete_Input[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Delete_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an delete() call. see crosssellingtypes:TDelete_Return
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="crosssellingtypes:TDelete_Return[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Update_In">
        <xs:annotation>
          <xs:documentation>
            input structure of an update() call. see crosssellingtypes:TUpdate_Input
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="crosssellingtypes:TUpdate_Input[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Update_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an update() call. see crosssellingtypes:TUpdate_Return
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="crosssellingtypes:TUpdate_Return[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="msg_Create_Input">
    <wsdl:part name="CrossSellings" type="tns:type_Create_In" />
  </wsdl:message>
  <wsdl:message name="msg_Create_Output">
    <wsdl:part name="CrossSellings" type="tns:type_Create_Out" />
  </wsdl:message>
  <wsdl:message name="msg_Update_Input">
    <wsdl:part name="CrossSellings" type="tns:type_Update_In" />
  </wsdl:message>
  <wsdl:message name="msg_Update_Output">
    <wsdl:part name="CrossSellings" type="tns:type_Update_Out" />
  </wsdl:message>
  <wsdl:message name="msg_Delete_Input">
    <wsdl:part name="CrossSellings" type="tns:type_Delete_In" />
  </wsdl:message>
  <wsdl:message name="msg_Delete_Output">
    <wsdl:part name="CrossSellings" type="tns:type_Delete_Out" />
  </wsdl:message>
  <wsdl:message name="msg_Exists_Input">
    <wsdl:part name="CrossSellings" type="tns:type_Exists_In" />
  </wsdl:message>
  <wsdl:message name="msg_Exists_Output">
    <wsdl:part name="CrossSellings" type="tns:type_Exists_Out" />
  </wsdl:message>
  <wsdl:message name="msg_GetInfo_Input">
    <wsdl:part name="CrossSellings" type="tns:type_GetInfo_In" />
  </wsdl:message>
  <wsdl:message name="msg_GetInfo_Output">
    <wsdl:part name="CrossSellings" type="tns:type_GetInfo_Out" />
  </wsdl:message>
  <wsdl:portType name="port_CrossSelling">
    <wsdl:operation name="create">
      <documentation>insert a cross selling (assign target product to product)</documentation>
      <wsdl:input message="tns:msg_Create_Input" />
      <wsdl:output message="tns:msg_Create_Output" />
    </wsdl:operation>
    <wsdl:operation name="update">
      <documentation>update a cross selling</documentation>
      <wsdl:input message="tns:msg_Update_Input" />
      <wsdl:output message="tns:msg_Update_Output" />
    </wsdl:operation>
    <wsdl:operation name="delete">
      <documentation>delete a cross selling (delete assignment of target product to product)</documentation>
      <wsdl:input message="tns:msg_Delete_Input" />
      <wsdl:output message="tns:msg_Delete_Output" />
    </wsdl:operation>
    <wsdl:operation name="exists">
      <documentation>check if exists a cross selling (if target product assigned to product)</documentation>
      <wsdl:input message="tns:msg_Exists_Input" />
      <wsdl:output message="tns:msg_Exists_Output" />
    </wsdl:operation>
    <wsdl:operation name="getInfo">
      <documentation>get a cross selling (target products assigned to product)</documentation>
      <wsdl:input message="tns:msg_GetInfo_Input" />
      <wsdl:output message="tns:msg_GetInfo_Output" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="bind_CrossSelling_SOAP" type="tns:port_CrossSelling">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc" />
    <wsdl:operation name="create">
      <soap:operation soapAction="urn://epages.de/WebService/CrossSellingService/2007/01#create" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CrossSellingService/2007/01" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CrossSellingService/2007/01" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="urn://epages.de/WebService/CrossSellingService/2007/01#update" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CrossSellingService/2007/01" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CrossSellingService/2007/01" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap:operation soapAction="urn://epages.de/WebService/CrossSellingService/2007/01#delete" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CrossSellingService/2007/01" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CrossSellingService/2007/01" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="exists">
      <soap:operation soapAction="urn://epages.de/WebService/CrossSellingService/2007/01#exists" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CrossSellingService/2007/01" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CrossSellingService/2007/01" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="getInfo">
      <soap:operation soapAction="urn://epages.de/WebService/CrossSellingService/2007/01#getInfo" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CrossSellingService/2007/01" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CrossSellingService/2007/01" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CrossSellingService">
    <documentation>epages5 Cross Selling Service</documentation>
    <wsdl:port name="port_CrossSelling" binding="tns:bind_CrossSelling_SOAP">
      <soap:address location="http://localhost/epages/Store.soap" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>