<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions xmlns:tns="urn://epages.de/WebService/CustomerService/2007/08" xmlns:customertypes="urn://epages.de/WebService/CustomerTypes/2007/08" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns="http://schemas.xmlsoap.org/wsdl/" name="CustomerService" targetNamespace="urn://epages.de/WebService/CustomerService/2007/08" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/">
  <documentation>
    this is a web service for an epages e-commerce system.
    this service is a container for all methods in the customer context.
  </documentation>
  <wsdl:types>
    <xs:schema xmlns="http://www.w3.org/2001/XMLSchema" targetNamespace="urn://epages.de/WebService/CustomerService/2007/08">
      <xs:import schemaLocation="CustomerTypes3.xsd" namespace="urn://epages.de/WebService/CustomerTypes/2007/08" />
      <xs:complexType name="type_GetInfo_In">
        <xs:annotation>
          <xs:documentation>
            input structure of an getInfo() customer call.
            a simple list of customer pathes.
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="xs:string[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_GetInfo_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an getInfo() customer call.
            see customertypes:TGetInfo_Return
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="customertypes:TGetInfo_Return[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_AttributeNames_In">
        <xs:annotation>
          <xs:documentation>
            additional input of a getInfo() customer call.
            a simple list of attribute names.
            defines the content of the returned attribute name-value list.
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="xs:string[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Exists_In">
        <xs:annotation>
          <xs:documentation>
            input structure of an exists() customer call.
            a simple list of customer paths.
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="xs:string[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Exists_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an exists() customer call.
            see customertypes:TExists_Return
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="customertypes:TExists_Return[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Delete_In">
        <xs:annotation>
          <xs:documentation>
            input structure of an delete() customer call.
            a simple list of customer paths.
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="xs:string[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Delete_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an delete() customer call.
            see customertypes:TGetInfo_Return
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="customertypes:TDelete_Return[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Update_In">
        <xs:annotation>
          <xs:documentation>
            input structure of an update() customer call.
            see customertypes:TUpdate_Input
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="customertypes:TUpdate_Input[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Update_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an update() customer call.
            see customertypes:TUpdate_Return
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="customertypes:TUpdate_Return[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Create_In">
        <xs:annotation>
          <xs:documentation>
            input structure of an create() customer call.
            see customertypes:TCreate_Input
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="customertypes:TCreate_Input[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="type_Create_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an create() customer call.
            see customertypes:TCreate_Return
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="customertypes:TCreate_Return[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
      <xs:complexType name="TFind_Input">
        <xs:annotation>
          <xs:documentation>
            input structure of an find() customer call.
            a set of optional search parameters.
          </xs:documentation>
        </xs:annotation>
        <xs:all>
          <xs:element minOccurs="0" name="Name" type="xs:string">
            <xs:annotation>
              <xs:documentation>search for part of customer name</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Alias" type="xs:string">
            <xs:annotation>
              <xs:documentation>search for part of customer alias</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Login" type="xs:string">
            <xs:annotation>
              <xs:documentation>search for part of user login</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="EMail" type="xs:string">
            <xs:annotation>
              <xs:documentation>search for part of customer email</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Street" type="xs:string">
            <xs:annotation>
              <xs:documentation>search for part of customer address (street)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Zipcode" type="xs:string">
            <xs:annotation>
              <xs:documentation>search for part of customer address (zipcode)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="City" type="xs:string">
            <xs:annotation>
              <xs:documentation>search for part of customer address (city)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CustomerGroup" type="xs:string">
            <xs:annotation>
              <xs:documentation>search for a specific customer group (path of customer group)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Revenue" type="xs:float">
            <xs:annotation>
              <xs:documentation>search for customers that made at least this revenue</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="CurrencyID" type="xs:string">
            <xs:annotation>
              <xs:documentation>search for customer revenue in this currency (mandatory if revenue is used)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RevenueFrom" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>search for customer revenue beginning with this date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="RevenueTo" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>search for customer revenue ending at this date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="Product" type="xs:string">
            <xs:annotation>
              <xs:documentation>search customers that bought this product (part of product alias)</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProductFrom" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>search customers that bought a product beginning with this date</xs:documentation>
            </xs:annotation>
          </xs:element>
          <xs:element minOccurs="0" name="ProductTo" type="xs:dateTime">
            <xs:annotation>
              <xs:documentation>search customers that bought a product ending at this date</xs:documentation>
            </xs:annotation>
          </xs:element>
        </xs:all>
      </xs:complexType>
      <xs:complexType name="type_Find_Out">
        <xs:annotation>
          <xs:documentation>
            output structure of an find() customer call.
            a simple list of customer paths.
          </xs:documentation>
        </xs:annotation>
        <xs:complexContent mixed="false">
          <xs:restriction base="soapenc:Array">
            <xs:attribute wsdl:arrayType="xs:string[]" ref="soapenc:arrayType" />
          </xs:restriction>
        </xs:complexContent>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="msg_GetInfo_Input">
    <wsdl:part name="Customers" type="tns:type_GetInfo_In" />
    <wsdl:part name="Attributes" type="tns:type_AttributeNames_In" />
    <wsdl:part name="AddressAttributes" type="tns:type_AttributeNames_In" />
  </wsdl:message>
  <wsdl:message name="msg_GetInfo_Output">
    <wsdl:part name="Customers" type="tns:type_GetInfo_Out" />
  </wsdl:message>
  <wsdl:message name="msg_Exists_Input">
    <wsdl:part name="Customers" type="tns:type_Exists_In" />
  </wsdl:message>
  <wsdl:message name="msg_Exists_Output">
    <wsdl:part name="Customers" type="tns:type_Exists_Out" />
  </wsdl:message>
  <wsdl:message name="msg_Delete_Input">
    <wsdl:part name="Customers" type="tns:type_Delete_In" />
  </wsdl:message>
  <wsdl:message name="msg_Delete_Output">
    <wsdl:part name="Customers" type="tns:type_Delete_Out" />
  </wsdl:message>
  <wsdl:message name="msg_Update_Input">
    <wsdl:part name="Customers" type="tns:type_Update_In" />
  </wsdl:message>
  <wsdl:message name="msg_Update_Output">
    <wsdl:part name="Customers" type="tns:type_Update_Out" />
  </wsdl:message>
  <wsdl:message name="msg_Create_Input">
    <wsdl:part name="Customers" type="tns:type_Create_In" />
  </wsdl:message>
  <wsdl:message name="msg_Create_Output">
    <wsdl:part name="Customers" type="tns:type_Create_Out" />
  </wsdl:message>
  <wsdl:message name="msg_Find_Input">
    <wsdl:part name="SearchParameters" type="tns:TFind_Input" />
  </wsdl:message>
  <wsdl:message name="msg_Find_Output">
    <wsdl:part name="Customers" type="tns:type_Find_Out" />
  </wsdl:message>
  <wsdl:portType name="port_Customer">
    <wsdl:operation name="getInfo">
      <documentation>get information about a list of customers</documentation>
      <wsdl:input message="tns:msg_GetInfo_Input" />
      <wsdl:output message="tns:msg_GetInfo_Output" />
    </wsdl:operation>
    <wsdl:operation name="exists">
      <documentation>check if a list of customers exist.</documentation>
      <wsdl:input message="tns:msg_Exists_Input" />
      <wsdl:output message="tns:msg_Exists_Output" />
    </wsdl:operation>
    <wsdl:operation name="delete">
      <documentation>delete a list of customers</documentation>
      <wsdl:input message="tns:msg_Delete_Input" />
      <wsdl:output message="tns:msg_Delete_Output" />
    </wsdl:operation>
    <wsdl:operation name="update">
      <documentation>update a list of customers</documentation>
      <wsdl:input message="tns:msg_Update_Input" />
      <wsdl:output message="tns:msg_Update_Output" />
    </wsdl:operation>
    <wsdl:operation name="create">
      <documentation>create new customers</documentation>
      <wsdl:input message="tns:msg_Create_Input" />
      <wsdl:output message="tns:msg_Create_Output" />
    </wsdl:operation>
    <wsdl:operation name="find">
      <documentation>find customers</documentation>
      <wsdl:input message="tns:msg_Find_Input" />
      <wsdl:output message="tns:msg_Find_Output" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="bind_Customer_SOAP" type="tns:port_Customer">
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" style="rpc" />
    <wsdl:operation name="getInfo">
      <soap:operation soapAction="urn://epages.de/WebService/CustomerService/2007/08#getInfo" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="exists">
      <soap:operation soapAction="urn://epages.de/WebService/CustomerService/2007/08#exists" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="delete">
      <soap:operation soapAction="urn://epages.de/WebService/CustomerService/2007/08#delete" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="update">
      <soap:operation soapAction="urn://epages.de/WebService/CustomerService/2007/08#update" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="create">
      <soap:operation soapAction="urn://epages.de/WebService/CustomerService/2007/08#create" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="find">
      <soap:operation soapAction="urn://epages.de/WebService/CustomerService/2007/08#find" />
      <wsdl:input>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="encoded" namespace="urn://epages.de/WebService/CustomerService/2007/08" encodingStyle="http://schemas.xmlsoap.org/soap/encoding/" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="CustomerService">
    <documentation>epages5 Customer Service</documentation>
    <wsdl:port name="port_Customer" binding="tns:bind_Customer_SOAP">
      <soap:address location="http://localhost/epages/Store.soap" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>